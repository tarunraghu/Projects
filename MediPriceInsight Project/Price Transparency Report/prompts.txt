Price Transparency Report Development Steps
==========================================

1. Initial Setup
---------------
Request: Create a front-end HTML page that:
- Shows a tabular report
- Has cascading filters
- Uses data fed from PostgreSQL
Action: Created index.html, app.js, styles.css with basic structure and Bootstrap integration

2. Database Configuration
------------------------
Request: Added PostgreSQL configuration:
DB_CONFIG = {
    'host': 'localhost',
    'database': 'healthcarepoc',
    'user': 'postgres',
    'password': 'Consis10C!',
    'port': '5432'
}
Action: Created app.py with Flask server and database connection

3. View Integration
------------------
Request: Use public.hospital_dataset as the data source
View Definition:
CREATE OR REPLACE VIEW public.hospital_dataset AS
SELECT DISTINCT 
    a.id,
    a.hospital_name,
    a.code,
    a.description,
    b.hospital_address,
    b.city,
    b.region,
    a.payer_name,
    a.plan_name,
    a.standard_charge_min,
    a.standard_charge_max,
    a.standard_charge_gross,
    a.standard_charge_negotiated_dollar
FROM hospital_charges_cleaned a
LEFT JOIN hospital_info b ON a.hospital_name = b.hospital_name::text;
Action: Updated backend query to use the view and fetch all columns

4. Filter Customization
----------------------
Request: Remove specific fields from filters:
- id
- hospital_name
- hospital_address
- standard_charge_gross
- standard_charge_max
- standard_charge_min
- standard_charge_negotiated_dollar
Action: Added EXCLUDED_FILTERS array in app.js while maintaining all columns in the table display

Current Status
-------------
- Frontend displays all data in a responsive table
- Filters are available for: code, description, city, region, payer_name, plan_name
- All monetary values are properly formatted
- Data is paginated to 1000 rows per page
- Cascading filters work correctly
- All columns are displayed but with selective filtering 